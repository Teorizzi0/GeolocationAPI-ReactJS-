{"version":3,"sources":["components/Map.js","components/UserList.js","components/CoordsTab.js","components/LocationSelector.js","hooks/index.js","components/LocationService.js","components/Main.js","components/CreateRoom.js","components/UserListR.js","components/Room.js","components/JoinNewRoom.js","App.js","serviceWorker.js","index.js","eventsConst.js"],"names":["useState","mapData","setMapData","setColorMap","placeChangeHandler","data","colorMap","console","log","useEffect","window","socket","on","eventsConst","placeChange","removeListener","id","style","width","height","Map","center","zoom","marginTop","TileLayer","attribution","url","map","d","uid","position","Marker","latitude","longitude","key","Popup","props","room","allUsers","setAllUsers","undefined","myStat","setMyStat","socketAdmin","isRoom","emit","msg","iId","setInterval","clearInterval","activeMembersHandler","userList","initQuery","activeMembers","leaveRoom","className","color","substring","u","idx","background","onClick","to","textDecoration","coords","locations","name","setCoords","setAddress","LocationButton","el","Geocode","setApiKey","enableDebug","geoEffect","callback","isSecureContext","navigator","geolocation","getCurrentPosition","alert","address","a","fromLatLng","response","parseResult","status","results","formatted_address","useGeo","prevCoords","value","ref","useRef","current","usePrev","pending","setPending","delta","reduce","acc","cur","range","length","v","i","some","CoordsTab","display","LocationSelector","Main","UserList","LocationService","CreateRoom","state","password","onCall","handleChange","e","setState","target","handleSubmit","preventDefault","this","history","goBack","pathname","htmlFor","type","onChange","defaultValue","Component","Room","match","params","UserListR","Auth","hash","HOST","location","origin","io","App","exact","path","component","JoinNewRoom","Boolean","hostname","ReactDOM","render","document","getElementById","serviceWorker","ready","then","registration","unregister","module","exports"],"mappings":"uPASe,aAAO,IAAD,EACWA,mBAAS,IADpB,mBACZC,EADY,KACHC,EADG,OAEaF,mBAAS,IAFtB,mBAEFG,GAFE,WAMbC,EAAqB,SAACC,EAAMC,GAChCC,QAAQC,IAAI,oBAAqBH,EAAMC,GACvCJ,EAAWG,GACXF,EAAYG,IATK,EAYWN,mBAAS,UAZpB,6BAmCnB,OApBAS,qBAAU,WAER,OADAC,OAAOC,OAAOC,GAAGC,IAAYC,YAAaV,GACnC,WACLM,OAAOC,OAAOI,eAAeF,IAAYC,YAAaV,MAGvD,IAeD,6BACE,6BAEE,yBAAKY,GAAG,MAAMC,MAAO,CAAEC,MA3CjB,IA2CwBC,OA1CvB,MA2CL,kBAACC,EAAA,EAAD,CAAKC,OAAQ,CAAC,GAAI,IAAKC,KAAM,EAAGL,MAAO,CAAEC,MA5CrC,IA4C4CC,OA3C3C,IA2CmDI,UAAU,KAKhE,kBAACC,EAAA,EAAD,CACEC,YAAY,0EACZC,IAAI,uDAELzB,EAAQ0B,KAAI,SAAAC,GAAK,kBAEQA,EAFR,GAETC,EAFS,KAEJC,EAFI,KAGhB,GAAKF,EAEL,OADArB,QAAQC,IAAI,MAAOsB,GAEjB,kBAACC,EAAA,EAAD,CACED,SAAU,CAACA,EAASE,SAAUF,EAASG,WACvCC,IAAKL,GAEL,kBAACM,EAAA,EAAD,aACMN,EAAI,6BADV,aAEWC,EAASE,SAAS,6BAF7B,cAE+CF,EAASG,UAFxD,cC9DH,WAACG,GAAW,IASrBC,EAToB,EAEQrC,mBAAS,IAFjB,mBAEjBsC,EAFiB,KAEPC,EAFO,OAIQvC,mBAAS,IAJjB,mBAIjBM,EAJiB,KAIPH,EAJO,OAKIH,wBAASwC,GALb,mBAKjBC,EALiB,KAKTC,EALS,KAOpBC,EAAc,KAIdP,EAAMQ,QACRrC,QAAQC,IAAI,WACZ6B,EAAOD,EAAMC,KACbM,EAAcjC,OAAO2B,OAGrB9B,QAAQC,IAAI,YACZ6B,EAAO,OACPM,EAAcjC,OAAOC,QAIvBF,qBAAU,WAERkC,EAAYE,KAAK,WAAYR,GAC7BM,EAAY/B,GAAG,QAAQ,SAACkC,GACtBvC,QAAQC,IAAIsC,MAEd,IAAMC,EAAMC,aAAY,WACPL,IAEbD,EAFaC,EAEI3B,GAAGqB,GACpBY,cAAcF,GACdxC,QAAQC,IAAI,oBAEb,QAGL,IAAM0C,EAAuB,SAACC,EAAU7C,GACtCC,QAAQC,IAAI,0BAA2BF,GACvCiC,EAAYY,GACZhD,EAAYG,IAGdG,qBAAU,WAIR,OAHAkC,EAAYE,KAAK,SAAUR,GAC3BM,EAAYE,KAAKhC,IAAYuC,WAC7BT,EAAY/B,GAAGC,IAAYwC,cAAeH,GACnC,WACLP,EAAY5B,eACVF,IAAYwC,cACZH,MAGH,IAEH,IAAMI,EAAY,WAChBX,EAAYE,KAAK,UAKnB,OACE,6BACGJ,EACC,yBAAKzB,GAAG,aACN,uBAAGuC,UAAU,kBAAb,kBACA,0BACEtC,MAAO,CACLuC,MAAOlD,EAASmC,EAAOgB,UAAU,EAAG,MAGrChB,EAAOgB,UAAU,EAAG,KAIvB,gBAEJ,yBAAKzC,GAAG,aACN,yBAAKuC,UAAU,QAAf,gBACA,wBAAIA,UAAU,cACXjB,EAASX,KAAI,SAAC+B,EAAGC,GAAJ,OACZ,wBAAIzB,IAAKyB,GACP,yBACEJ,UAAU,YACVtC,MAAO,CACL2C,WAAYtD,EAASoD,KAGtBA,SAOX,6BACE,4BAAQH,UAAU,gBAAgBvC,GAAG,gBAAgB6C,QAASP,GAAW,kBAAC,IAAD,CAAMQ,GAAE,cAAiB7C,MAAO,CAAE8C,eAAgB,OAAQP,MAAO,YAAjE,0BACzE,4BAAQD,UAAU,gBAAgBvC,GAAG,cAAc6C,QAASP,GAAW,kBAAC,IAAD,CAAMQ,GAAE,QAAW7C,MAAO,CAAE8C,eAAgB,OAAQP,MAAO,YAA3D,2BCvGhE,cAAiB,IAAdQ,EAAa,EAAbA,OAChB,GAAKA,EACA,CAAC,IACIhC,EAAwBgC,EAAxBhC,SAAUC,EAAc+B,EAAd/B,UAElB,OACE,yBAAKsB,UAAU,cACb,0CAAgBvB,GAChB,2CAAiBC,IAPV,OAAO,qDCAhBgC,EAAY,CAChB,CACEjC,SAAU,QACVC,UAAW,QACXiC,KAAM,aAER,CACElC,SAAU,QACVC,UAAW,QACXiC,KAAM,QAER,CACElC,SAAU,QACVC,UAAW,OACXiC,KAAM,UAER,CAEElC,SAAU,GACVC,UAAW,GACXiC,KAAM,UAER,CAEElC,SAAU,QACVC,UAAW,MACXiC,KAAM,UAER,CACElC,SAAU,QACVC,UAAW,QACXiC,KAAM,QAGR,CACElC,SAAU,QACVC,UAAW,MACXiC,KAAM,SAGR,CACElC,SAAU,QACVC,UAAW,QACXiC,KAAM,YAER,CACElC,SAAU,QACVC,UAAW,MACXiC,KAAM,aAGR,CACElC,SAAU,QACVC,UAAW,QACXiC,KAAM,WAIK,cAAgC,IAA7BC,EAA4B,EAA5BA,UAAWC,EAAiB,EAAjBA,WACrBC,EAAiB,SAAC,GAAD,IAAGhE,EAAH,EAAGA,KAAH,OACrB,uCACEkD,UAAU,mBACNlD,EAFN,CAGEwD,QAAS,WACPM,EAAU,CACRnC,SAAU3B,EAAK2B,SACfC,UAAW5B,EAAK4B,YAElBmC,EAAW/D,EAAK6D,MAChBxD,OAAOC,OAAOkC,KAAKhC,IAAYC,YAAaT,MAG9C,6BAAMA,EAAK6D,MACX,6BACE,uBAAGX,UAAU,kBAAb,0BAKN,OACE,yBAAKA,UAAU,8BACZU,EAAUtC,KAAI,SAAA2C,GAAE,OACf,kBAACD,EAAD,CAAgBhE,KAAMiE,EAAIpC,IAAKoC,EAAGJ,Y,0CChF1CK,IAAQC,UAAU,2CAGlBD,IAAQE,cAER,IAAMC,EAAY,SAAAC,GACZjE,OAAOkE,gBACL,gBAAiBC,WACnBA,UAAUC,YAAYC,mBAAmBJ,GAG3CK,MAAM,uBCTK,aAAO,IAAD,EDaN,WAAO,IAAD,EACShF,wBAASwC,GADlB,mBACZwB,EADY,KACJG,EADI,OAEWnE,mBAAS,IAFpB,mBAEZiF,EAFY,KAEHb,EAFG,KA0BnB,OAtBA3D,qBAAU,WACRiE,EAAS,uCAAC,qCAAAQ,EAAA,6DAASlB,EAAT,EAASA,OACjBzD,QAAQC,IAAIwD,EAAQ,UACpBG,EAAUH,GACFhC,EAAwBgC,EAAxBhC,SAAUC,EAAc+B,EAAd/B,UAHV,SAIesC,IAAQY,WAAWnD,EAAUC,GAJ5C,OAIFmD,EAJE,OAKR7E,QAAQC,IAAI4E,GACRC,EAAc,UACM,OAApBD,EAASE,SACXD,EAAcD,EAASG,QAAQ,GAAGC,kBAClCpB,EAAWiB,IAEb3E,OAAOC,OAAOkC,KAAKhC,IAAYC,YAAa,CAC1CkB,WACAC,YACAiC,KAAMmB,IAdA,4CAAD,yDAmBR,IAEI,CAACrB,EAAQG,EAAWc,EAASb,GCtCaqB,GAD9B,mBACZzB,EADY,KACJG,EADI,KACOc,EADP,KACgBb,EADhB,KAEbsB,EDwCQ,SAAAC,GAGd,IAAMC,EAAMC,mBAQZ,OALApF,qBAAU,WACRmF,EAAIE,QAAUH,IACb,CAACA,IAGGC,EAAIE,QCnDQC,CAAQ/B,GAFR,EAIWhE,oBAAS,GAJpB,mBAIZgG,EAJY,KAIHC,EAJG,KAQnBxF,qBAAU,WACR,GAAKiF,EAAL,CACA,IAAMQ,EAAQ,CAAClC,EAAQ0B,GACpB/D,KAAI,SAAA2C,GAAE,MAAI,CAACA,EAAGtC,SAAUsC,EAAGrC,cAC3BkE,QAAO,SAACC,EAAKC,GAIZ,OAHAC,gBAAMD,EAAIE,QAAQ5E,KAAI,SAAC6E,EAAGC,GACxBL,EAAIK,IAAMJ,EAAII,MAETL,KAEPF,EAAMQ,MAAK,SAAAF,GAAC,OAAIA,EAAI,QACtBjG,QAAQC,IAAI,gBAAiB0F,MAE9B,CAAClC,EAAQ0B,IAcZ,OACE,oCACE,yBAAK1E,GAAG,oBACN,yBACEuC,UAAU,kBACVM,QAAS,WACPoC,GAAW,GACXvB,GAAU,YAAiB,IAAdV,EAAa,EAAbA,OACXG,EAAUH,GACVI,EAAW,WACX7D,QAAQC,IAAI,mBAAoBwD,GAHR,IAIhBhC,EAAwBgC,EAAxBhC,SAAUC,EAAc+B,EAAd/B,UAElBvB,OAAOC,OAAOkC,KAAKhC,IAAYC,YAAa,CAC1CkB,WACAC,YACAiC,KAJgB,YAMlB+B,GAAW,QAIf,yCAnBF,IAmBsB,uBAAG1C,UAAU,kBAAb,YAErByC,EACC,6CAEA,oCACE,yBAAKzC,UAAU,SAAS0B,GACxB,kBAAC0B,EAAD,CAAW3C,OAAQA,IAAW,MAIpC,mBA7CS,kBACV0B,EAGC,yBAAK1E,GAAG,qBACN,yBAAKC,MAAO,CAAE2F,QAAS,SACrB,0CADF,IACuB,uBAAGrD,UAAU,kBAAb,YAEvB,kBAACoD,EAAD,CAAW3C,OAAQ0B,KANrB,gCA2CA,MACA,kBAACmB,EAAD,CAAkB1C,UAAWA,EAAWC,WAAYA,MC1D3C0C,EAbF,WACT,OACE,6BACE,yBAAKvD,UAAU,mBACb,kBAACwD,EAAD,CAAUnE,QAAQ,IAClB,kBAACoE,EAAD,OAEF,yBAAKzD,UAAU,mBACb,kBAAC,EAAD,S,gDC2DK0D,E,2MA9DXC,MAAQ,CACJhD,KAAM,GACNiD,SAAU,GACVC,OAAO,I,EAEXC,aAAe,SAACC,GACZ,EAAKC,SAAL,eACKD,EAAEE,OAAOxG,GAAKsG,EAAEE,OAAO7B,S,EAGhC8B,aAAe,SAACH,GACZA,EAAEI,iBAEF,EAAKH,SAAS,CACVH,OAAO,EAAKF,MAAMhD,OAEtB3D,QAAQC,IAAI,EAAK0G,Q,sEAGdI,GACHA,EAAEI,iBACFC,KAAKvF,MAAMwF,QAAQC,W,+BAGb,IAAD,OAEL,OADAtH,QAAQC,IAAImH,KAAKT,MAAMhD,MACnByD,KAAKT,MAAME,OAAe,kBAAC,IAAD,CAAUtD,GAAI,CAACgE,SAAS,UAAD,OAAWH,KAAKT,MAAME,WAGvE,yBAAK7D,UAAU,UACX,6BACI,4BACIA,UAAU,iDACVM,QAAS,SAAAyD,GAAO,EAAKO,OAAOP,KAFhC,QAMA,0BAAM/D,UAAU,cACZ,yBAAKA,UAAU,2BACX,2BAAOwE,QAAQ,WAAWxE,UAAU,qBAApC,YAAiE,8BACjE,2BACIA,UAAU,kDACVyE,KAAK,OACLhH,GAAG,OACHiH,SAAUN,KAAKN,gBAGvB,yBAAK9D,UAAU,cACX,4BAAQM,QAAS8D,KAAKF,aAAcO,KAAK,SAASE,aAAa,SAAS3E,UAAU,8CAAlF,kB,GAjDH4E,aCHV,WAAC/F,GAAW,IAAD,EAEUpC,mBAAS,IAFnB,mBAEfsC,EAFe,KAELC,EAFK,OAIUvC,mBAAS,IAJnB,mBAIfM,EAJe,KAILH,EAJK,OAKMH,wBAASwC,GALf,mBAKfC,EALe,KAKPC,EALO,KAQlBL,EAAOD,EAAMC,KACXM,EAAcjC,OAAOC,OAE3BF,qBAAU,WAENkC,EAAYE,KAAK,WAAWR,GAC5BM,EAAY/B,GAAG,QAAO,SAACkC,GACrBvC,QAAQC,IAAIsC,MAEd,IAAMC,EAAMC,aAAY,WACPL,IAEbD,EAFaC,EAEI3B,IACjBiC,cAAcF,GACdxC,QAAQC,IAAI,oBAEb,QAGL,IAAM0C,EAAuB,SAACC,EAAU7C,GACtCC,QAAQC,IAAI,0BAA2BF,GACvCiC,EAAYY,GACZhD,EAAYG,IAGdG,qBAAU,WAIR,OAHAkC,EAAYE,KAAK,SAAUR,GAC3BM,EAAYE,KAAKhC,IAAYuC,WAC7BT,EAAY/B,GAAGC,IAAYwC,cAAeH,GACnC,WACLP,EAAY5B,eACVF,IAAYwC,cACZH,MAGH,IAEL,IAAMI,EAAW,WACbX,EAAYE,KAAK,UAGrB,OACI,6BACKJ,EACG,yBAAKzB,GAAG,aACJ,uBAAGuC,UAAU,kBAAb,kBACA,0BACItC,MAAO,CACHuC,MAAOlD,EAASmC,EAAOgB,UAAU,EAAG,MAGvChB,EAAOgB,UAAU,EAAG,GAApB,oBAAoCpB,EAApC,OAIL,gBAER,yBAAKrB,GAAG,aACJ,yBAAKuC,UAAU,QAAf,gBACA,wBAAIA,UAAU,cACTjB,EAASX,KAAI,SAAC+B,EAAGC,GAAJ,OACV,wBAAIzB,IAAKyB,GACL,yBACIJ,UAAU,YACVtC,MAAO,CACH2C,WAAYtD,EAASoD,KAGxBA,SAOrB,6BACI,4BAAQH,UAAU,gBAAgBvC,GAAG,gBAAgB6C,QAASP,GAAW,kBAAC,IAAD,CAAMQ,GAAE,cAAiB7C,MAAO,CAAE8C,eAAgB,OAAQP,MAAO,YAAjE,0BACzE,4BAAQD,UAAU,gBAAgBvC,GAAG,cAAc6C,QAASP,GAAW,kBAAC,IAAD,CAAMQ,GAAE,QAAW7C,MAAO,CAAE8C,eAAgB,OAAQP,MAAO,YAA3D,2BCzCxE4E,E,YAvCX,WAAYhG,GAAQ,IAAD,8BACf,4CAAMA,KAMVkB,UAAW,WACP5C,OAAOC,OAAOkC,KAAK,UANnB,EAAKqE,MAAQ,CACThD,KAAM,EAAK9B,MAAMiG,MAAMC,OAAOtH,IAHnB,E,sEAcf,OAFAT,QAAQC,IAAImH,KAAKT,MAAMhD,MAGnB,6BACI,4BAAQL,QAAS8D,KAAKrE,UAAWC,UAAU,2DACvC,kBAAC,IAAD,CAAMO,GAAE,IAAO7C,MAAO,CAAE8C,eAAgB,OAAQP,MAAO,YAAvD,sBAIJ,6BACI,yBAAKD,UAAU,mBAEX,kBAACgF,EAAD,CAAWlG,KAAMsF,KAAKT,MAAMhD,OAE5B,kBAAC8C,EAAD,OAEJ,yBAAKzD,UAAU,mBACX,kBAAC,EAAD,a,GA9BL4E,aC0DJK,E,2MA5DXtB,MAAQ,CACJhD,KAAM,GACNiD,SAAU,GACVsB,KAAK,I,EAETpB,aAAe,SAACC,GACZ,EAAKC,SAAL,eACKD,EAAEE,OAAOxG,GAAKsG,EAAEE,OAAO7B,S,EAGhC8B,aAAe,SAACH,GACZA,EAAEI,iBACF,EAAKH,SAAS,CACVkB,KAAK,EAAKvB,MAAMhD,OAEpB3D,QAAQC,IAAI,EAAK0G,Q,sEAGdI,GACHA,EAAEI,iBACFC,KAAKvF,MAAMwF,QAAQC,W,+BAKnB,OADAtH,QAAQC,IAAImH,KAAKT,MAAMhD,MACnByD,KAAKT,MAAMuB,KAAa,kBAAC,IAAD,CAAU3E,GAAE,iBAAY6D,KAAKT,MAAMuB,QAG3D,yBAAKlF,UAAU,gBACX,4BAAQA,UAAU,2DACd,kBAAC,IAAD,CAAMO,GAAE,IAAO7C,MAAO,CAAE8C,eAAgB,OAAQP,MAAO,YAAvD,sBAIJ,2BAAOD,UAAU,kBAAjB,eACA,yBAAKA,UAAU,wBACX,0BAAMA,UAAU,cACZ,yBAAKA,UAAU,2BACX,2BAAOwE,QAAQ,WAAWxE,UAAU,qBAApC,YAAiE,8BACjE,2BACIA,UAAU,kDACVyE,KAAK,OACLhH,GAAG,OACHiH,SAAUN,KAAKN,gBAGvB,yBAAK9D,UAAU,cACX,4BAAQM,QAAS8D,KAAKF,aAAcO,KAAK,SAASE,aAAa,SAAS3E,UAAU,8CAC9E,kBAAC,IAAD,CAAMO,GAAE,iBAAY6D,KAAKT,MAAMhD,MAAQjD,MAAO,CAAE8C,eAAgB,OAAQP,MAAO,YAA/E,iB,GAjDb2E,aCGbO,EAAOhI,OAAOiI,SAASC,OAC7BlI,OAAOC,OAASkI,IAAGH,GAYnB,IAWeI,EAXH,WACV,OACE,yBAAKvF,UAAU,OACb,kBAAC,IAAD,CAAOwF,OAAK,EAACC,KAAK,IAAIC,UAAWnC,IACjC,kBAAC,IAAD,CAAOkC,KAAK,cAAcC,UAAWhC,IACrC,kBAAC,IAAD,CAAO+B,KAAK,aAAaC,UAAWb,IACpC,kBAAC,IAAD,CAAOY,KAAK,QAAQC,UAAWC,MCjBjBC,QACW,cAA7BzI,OAAOiI,SAASS,UAEe,UAA7B1I,OAAOiI,SAASS,UAEhB1I,OAAOiI,SAASS,SAASf,MACvB,2D,OCPNgB,IAASC,OACL,kBAAC,IAAD,KACI,kBAAC,EAAD,OAENC,SAASC,eAAe,SDkHpB,kBAAmB3E,WACrBA,UAAU4E,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,iB,0EEnInBC,EAAOC,QAAU,CACf1G,cAAe,gBACfD,UAAW,YACXtC,YAAa,gB","file":"static/js/main.5df47bd4.chunk.js","sourcesContent":["import React, { useEffect, useState, useRef } from 'react'\nimport eventsConst from '../eventsConst'\nimport { unary, chain } from 'lodash'\nimport { Map, TileLayer, Marker, Popup } from 'react-leaflet'\n\nconst width = 720\nconst height = 720\nlet map\n\nexport default () => {\n  const [mapData, setMapData] = useState([])\n  const [colorMap, setColorMap] = useState({})\n  // const canvasRef = useRef()\n\n\n  const placeChangeHandler = (data, colorMap) => {\n    console.log('handle map update', data, colorMap)\n    setMapData(data)\n    setColorMap(colorMap)\n  }\n\n  const [section, setSection] = useState('canvas')\n\n\n  useEffect(() => {\n    window.socket.on(eventsConst.placeChange, placeChangeHandler)\n    return () => {\n      window.socket.removeListener(eventsConst.placeChange, placeChangeHandler\n        )\n    }\n  }, [])\n\n\n \n\n  // const Pin = ({ id, longitude, latitude, name }) => (\n  //   <div className='pin'>\n  //     <div>{id}</div>\n  //     <div>{longitude}</div>\n  //     <div>{latitude}</div>\n  //     <div>{name}</div>\n  //   </div>\n  // )\n\n  return (\n    <div>\n      <div>\n        {/* <canvas ref={canvasRef} width={width} height={height} /> */}\n        <div id='map' style={{ width, height }}>\n          <Map center={[60, 24]} zoom={5} style={{ width, height, marginTop:50}}>\n            {/* <TileLayer\n              attribution='&amp;copy <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n              url='https://stamen-tiles-{s}.a.ssl.fastly.net/watercolor/{z}/{x}/{y}.jpg'\n            /> */}\n            <TileLayer\n              attribution='&amp;copy <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n              url='https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png'\n            />\n            {mapData.map(d => {\n              // console.log(2222, d)\n              const [uid, position] = d\n              if (!d) return\n              console.log(22333, position)\n              return (\n                <Marker\n                  position={[position.latitude, position.longitude]}\n                  key={uid}\n                >\n                  <Popup>\n                  user:{uid}<br />\n                  latitude= {position.latitude}<br /> longitude={position.longitude}.\n                  </Popup>\n                </Marker>\n              )\n            })}\n          </Map>\n        </div>\n      </div>\n\n      {/* {mapData.map(([id, data]) => (\n        <Pin id={id} {...data} key={id} />\n      ))} */}\n    </div>\n  )\n}\n","import React, { useEffect, useState } from 'react'\nimport eventsConst from '../eventsConst'\nimport { Link } from \"react-router-dom\";\n\n\n\nexport default (props) => {\n\n  const [allUsers, setAllUsers] = useState([])\n\n  const [colorMap, setColorMap] = useState({})\n  const [myStat, setMyStat] = useState(undefined)\n\n  var socketAdmin = null\n\n  var room\n\n  if (props.isRoom) {\n    console.log(\"is room\")\n    room = props.room\n    socketAdmin = window.room\n  }\n  else {\n    console.log(\"not room\")\n    room = 'main'\n    socketAdmin = window.socket\n  }\n\n\n  useEffect(() => {\n\n    socketAdmin.emit('joinRoom', room)\n    socketAdmin.on('newU', (msg) => {\n      console.log(msg)\n    })\n    const iId = setInterval(() => {\n      const socket = socketAdmin\n      if (socket) {\n        setMyStat(socket.id+room)\n        clearInterval(iId)\n        console.log('set my status')\n      }\n    }, 200)\n  })\n\n  const activeMembersHandler = (userList, colorMap) => {\n    console.log('handle user list update', colorMap)\n    setAllUsers(userList)\n    setColorMap(colorMap)\n  }\n\n  useEffect(() => {\n    socketAdmin.emit('myRoom', room)\n    socketAdmin.emit(eventsConst.initQuery)\n    socketAdmin.on(eventsConst.activeMembers, activeMembersHandler)\n    return () => {\n      socketAdmin.removeListener(\n        eventsConst.activeMembers,\n        activeMembersHandler,\n      )\n    }\n  }, [])\n\n  const leaveRoom = () => {\n    socketAdmin.emit('leave')\n  }\n\n\n\n  return (\n    <div>\n      {myStat ? (\n        <div id='my-status'>\n          <i className='material-icons'>account_circle</i>\n          <span\n            style={{\n              color: colorMap[myStat.substring(0, 5)],\n            }}\n          >\n            {myStat.substring(0, 5)}\n          </span>\n        </div>\n      ) : (\n          'connecting...'\n        )}\n      <div id='user-list'>\n        <div className='bold'>Active users</div>\n        <ul className='clean-list'>\n          {allUsers.map((u, idx) => (\n            <li key={idx}>\n              <div\n                className='user-item'\n                style={{\n                  background: colorMap[u],\n                }}\n              >\n                {u}\n              </div>\n            </li>\n          ))}\n        </ul>\n      </div>\n\n      <div>\n        <button className=\"create-room-b\" id='create-room-b' onClick={leaveRoom}><Link to={`/createroom`} style={{ textDecoration: 'none', color: 'inherit' }}>Create a private room</Link></button>\n        <button className=\"create-room-b\" id='join-room-b' onClick={leaveRoom}><Link to={`/auth`} style={{ textDecoration: 'none', color: 'inherit' }}>Join a private room</Link></button>\n      </div>\n\n\n    </div>\n  )\n}\n","import React from 'react'\n\nexport default ({ coords }) => {\n  if (!coords) return <div>Getting position...</div>\n  else {\n    const { latitude, longitude } = coords\n\n    return (\n      <div className='coords-tab'>\n        <div>latitude: {latitude}</div>\n        <div>longitude: {longitude}</div>\n      </div>\n    )\n  }\n}\n","import React from 'react'\nimport eventsConst from '../eventsConst'\n\nconst locations = [\n  {\n    latitude: 59.3293,\n    longitude: 18.0686,\n    name: 'Stockholm',\n  },\n  {\n    latitude: 59.9139,\n    longitude: 10.7522,\n    name: 'Oslo',\n  },\n  {\n    latitude: 40.4168,\n    longitude: 3.7038,\n    name: 'Madrid',\n  },\n  {\n    // 52.5200° N, 13.4050° E\n    latitude: 52,\n    longitude: 13,\n    name: 'Berlin',\n  },\n  {\n    // 55.7558° N, 37.6173° E\n    latitude: 55.7558,\n    longitude: 37.52,\n    name: 'Moscow',\n  },\n  {\n    latitude: 41.8902,\n    longitude: 12.4923,\n    name: 'Rome',\n  },\n\n  {\n    latitude: 48.8647,\n    longitude: 2.349,\n    name: 'Paris',\n  },\n\n  {\n    latitude: 47.4979,\n    longitude: 19.0402,\n    name: 'Budapest',\n  },\n  {\n    latitude: 52.3718,\n    longitude: 4.896,\n    name: 'Amsterdam',\n  },\n\n  {\n    latitude: 59.4369,\n    longitude: 24.7535,\n    name: 'Tallin',\n  },\n]\n\nexport default ({ setCoords, setAddress }) => {\n  const LocationButton = ({ data }) => (\n    <div\n      className='location-button'\n      {...data}\n      onClick={() => {\n        setCoords({\n          latitude: data.latitude,\n          longitude: data.longitude,\n        })\n        setAddress(data.name)\n        window.socket.emit(eventsConst.placeChange, data)\n      }}\n    >\n      <div>{data.name}</div>\n      <div>\n        <i className='material-icons'>airplanemode_active</i>\n      </div>\n    </div>\n  )\n\n  return (\n    <div className='location-buttons-container'>\n      {locations.map(el => (\n        <LocationButton data={el} key={el.name} />\n      ))}\n    </div>\n  )\n}\n","import { useState, useEffect, useRef } from 'react'\nimport eventsConst from '../eventsConst'\nimport Geocode from 'react-geocode'\n\n// set Google Maps Geocoding API for purposes of quota management. Its optional but recommended.\nGeocode.setApiKey('AIzaSyD_FDJ_tv1sCOg80r5m4M-lF3xhDvGE-ks')\n\n// Enable or disable logs. Its optional.\nGeocode.enableDebug()\n\nconst geoEffect = callback => {\n  if (window.isSecureContext) {\n    if ('geolocation' in navigator) {\n      navigator.geolocation.getCurrentPosition(callback)\n    }\n  } else {\n    alert('not secure context')\n  }\n}\n\nconst useGeo = () => {\n  const [coords, setCoords] = useState(undefined)\n  const [address, setAddress] = useState('')\n\n  useEffect(() => {\n    geoEffect(async ({ coords }) => {\n      console.log(coords, 'uesGeo')\n      setCoords(coords)\n      const { latitude, longitude } = coords\n      const response = await Geocode.fromLatLng(latitude, longitude)\n      console.log(response)\n      let parseResult = 'Current'\n      if (response.status === 'OK') {\n        parseResult = response.results[0].formatted_address\n        setAddress(parseResult)\n      }\n      window.socket.emit(eventsConst.placeChange, {\n        latitude,\n        longitude,\n        name: parseResult,\n      })\n \n\n    })\n  }, [])\n\n  return [coords, setCoords, address, setAddress]\n}\n\nconst usePrev = value => {\n  // The ref object is a generic container whose current property is mutable ...\n  // ... and can hold any value, similar to an instance property on a class\n  const ref = useRef()\n\n  // Store current value in ref\n  useEffect(() => {\n    ref.current = value\n  }, [value]) // Only re-run if value changes\n\n  // Return previous value (happens before update in useEffect above)\n  return ref.current\n}\n\nconst useSubscription = (event, handler) => {\n  useEffect(() => {\n    window.socket.on(event, handler)\n    window.home.on(event,handler)\n    return () => {\n      window.socket.removeListener(event, handler)\n      window.home.removeListener(event, handler)\n    }\n  }, [event, handler])\n}\n\nexport { useSubscription, usePrev, useGeo, geoEffect }\n","import React, { useEffect, useState } from 'react'\nimport eventsConst from '../eventsConst'\nimport CoordsTab from './CoordsTab'\nimport LocationSelector from './LocationSelector'\nimport { useGeo, usePrev, geoEffect } from '../hooks/index'\nimport { range } from 'lodash'\n\nexport default () => {\n  const [coords, setCoords, address, setAddress] = useGeo()\n  const prevCoords = usePrev(coords)\n\n  const [pending, setPending] = useState(false)\n  // console.log('prev:', prevCoords)\n  // console.log(coords)\n\n  useEffect(() => {\n    if (!prevCoords) return\n    const delta = [coords, prevCoords]\n      .map(el => [el.latitude, el.longitude])\n      .reduce((acc, cur) => {\n        range(cur.length).map((v, i) => {\n          acc[i] -= cur[i]\n        })\n        return acc\n      })\n    if (delta.some(v => v > 0.01)) {\n      console.log('change delta:', delta)\n    }\n  }, [coords, prevCoords])\n\n  const Prev = () =>\n    !prevCoords ? (\n      <div></div>\n    ) : (\n      <div id='previous-location'>\n        <div style={{ display: 'flex' }}>\n          <div>Previous </div> <i className='material-icons'>history</i>\n        </div>\n        <CoordsTab coords={prevCoords} />\n      </div>\n    )\n\n  return (\n    <>\n      <div id='current-location'>\n        <div\n          className='location-button'\n          onClick={() => {\n            setPending(true)\n            geoEffect(({ coords }) => {\n              setCoords(coords)\n              setAddress('Current')\n              console.log('updated position', coords)\n              const { latitude, longitude } = coords\n              let parseResult = 'Current'\n              window.socket.emit(eventsConst.placeChange, {\n                latitude,\n                longitude,\n                name: parseResult,\n              })\n              setPending(false)\n            })\n          }}\n        >\n          <div>Current </div> <i className='material-icons'>near_me</i>\n        </div>\n        {pending ? (\n          <div>Updating ...</div>\n        ) : (\n          <>\n            <div className='serif'>{address}</div>\n            <CoordsTab coords={coords} />{' '}\n          </>\n        )}\n      </div>\n      <Prev />\n      <LocationSelector setCoords={setCoords} setAddress={setAddress} />\n    </>\n  )\n}\n","import React from 'react'\nimport Map from './Map'\nimport UserList from './UserList'\nimport LocationService from './LocationService'\n\nconst Main = () =>{\n    return (\n      <div>\n        <div className='fl w-40 pl5 mt5'>\n          <UserList isRoom={false}/>\n          <LocationService />\n        </div>\n        <div className='fr w-40 pa1 mt4'>\n          <Map />\n        </div>\n      </div>\n)}\n\nexport default Main\n\n  ","import React, { Component } from 'react'\nimport { Redirect } from 'react-router-dom'\nimport { Link } from \"react-router-dom\";\n\n// import { Redirect } from 'react-router-dom'\n\n\n\n\nclass CreateRoom extends Component {\n    state = {\n        name: '',\n        password: '',\n        onCall:''\n    }\n    handleChange = (e) => {\n        this.setState({\n            [e.target.id]: e.target.value\n        })\n    }\n    handleSubmit = (e) => {\n        e.preventDefault();\n        \n        this.setState({\n            onCall:this.state.name\n        })\n        console.log(this.state)\n    }\n\n    goBack(e) {\n        e.preventDefault();\n        this.props.history.goBack();\n    }\n\n    render() {\n        console.log(this.state.name)\n        if (this.state.onCall) return <Redirect to={{pathname:`/rooms/${this.state.onCall}`}} />\n\n        return (\n            <div className=\"center\">\n                <div >\n                    <button\n                        className='pa2 b--black input-reset ba bg-transparent mt4'\n                        onClick={e => { this.goBack(e) }}\n                    >\n                        Back\n                </button>\n                    <form className=\"center mt5\">\n                        <div className=\"input-field mt3  center\">\n                            <label htmlFor=\"password\" className=\"db fw4 lh-copy f6\">Room Name<br /></label>\n                            <input\n                                className='pa2 input-reset ba bg-transparent w-100 measure'\n                                type=\"name\"\n                                id=\"name\"\n                                onChange={this.handleChange}\n                            />\n                        </div>\n                        <div className=\"mt3 center\">\n                            <button onClick={this.handleSubmit} type='submit' defaultValue='Create' className=\"pa2 b--black input-reset ba bg-transparent\">\n                                Create\n                                {/* <Link to={`/room/${this.state.name}`} style={{ textDecoration: 'none', color: 'inherit' }} >Create</Link> */}\n                            </button>\n                        </div>\n                    </form>\n                </div>\n            </div>\n        )\n\n    }\n}\n\n\nexport default CreateRoom\n","import React, { useEffect, useState } from 'react'\nimport eventsConst from '../eventsConst'\nimport { Link } from \"react-router-dom\";\n\n\n\nexport default (props) => {\n\n    const [allUsers, setAllUsers] = useState([])\n\n    const [colorMap, setColorMap] = useState({})\n    const [myStat, setMyStat] = useState(undefined)\n\n\n    var room = props.room\n    const socketAdmin = window.socket\n\n    useEffect(() => {\n\n        socketAdmin.emit('joinRoom',room)\n        socketAdmin.on('newU',(msg)=>{\n          console.log(msg)\n        })\n        const iId = setInterval(() => {\n          const socket = socketAdmin\n          if (socket) {\n            setMyStat(socket.id)\n            clearInterval(iId)\n            console.log('set my status')\n          }\n        }, 200)\n      })\n    \n      const activeMembersHandler = (userList, colorMap) => {\n        console.log('handle user list update', colorMap)\n        setAllUsers(userList)\n        setColorMap(colorMap)\n      }\n    \n      useEffect(() => {\n        socketAdmin.emit('myRoom', room)\n        socketAdmin.emit(eventsConst.initQuery)\n        socketAdmin.on(eventsConst.activeMembers, activeMembersHandler)\n        return () => {\n          socketAdmin.removeListener(\n            eventsConst.activeMembers,\n            activeMembersHandler,\n          )\n        }\n      }, [])\n\n    const leaveRoom =()=>{\n        socketAdmin.emit('leave')\n    }\n\n    return (\n        <div>\n            {myStat ? (\n                <div id='my-status'>\n                    <i className='material-icons'>account_circle</i>\n                    <span\n                        style={{\n                            color: colorMap[myStat.substring(0, 5)],\n                        }}\n                    >\n                        {myStat.substring(0, 5)+` in room (${room})`}\n                    </span>\n                </div>\n            ) : (\n                    'connecting...'\n                )}\n            <div id='user-list'>\n                <div className='bold'>Active users</div>\n                <ul className='clean-list'>\n                    {allUsers.map((u, idx) => (\n                        <li key={idx}>\n                            <div\n                                className='user-item'\n                                style={{\n                                    background: colorMap[u],\n                                }}\n                            >\n                                {u}\n                            </div>\n                        </li>\n                    ))}\n                </ul>\n            </div>\n\n            <div>\n                <button className=\"create-room-b\" id='create-room-b' onClick={leaveRoom}><Link to={`/createroom`} style={{ textDecoration: 'none', color: 'inherit' }}>Create a private room</Link></button>\n                <button className=\"create-room-b\" id='join-room-b' onClick={leaveRoom}><Link to={`/auth`} style={{ textDecoration: 'none', color: 'inherit' }}>Join a private room</Link></button>\n            </div>\n\n        </div>\n    )\n}\n","import React, { Component } from 'react'\nimport { Redirect } from 'react-router-dom'\nimport { Link } from \"react-router-dom\";\nimport Map from './Map'\nimport UserList from './UserList'\nimport UserListR from './UserListR'\nimport LocationService from './LocationService'\n\n\n\nclass Room extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            name: this.props.match.params.id,\n        };\n    }\n\n    leaveRoom =()=>{\n        window.socket.emit('leave')\n    }\n\n    render() {\n        console.log(this.state.name)\n\n        return (\n            <div >\n                <button onClick={this.leaveRoom} className='pa2 b--black input-reset ba bg-transparent mt4s mt3 pl4'>\n                    <Link to={`/`} style={{ textDecoration: 'none', color: 'inherit' }}>\n                        Back To Main Page\n                    </Link>\n                </button>\n                <div>\n                    <div className='fl w-40 pl5 mt4'>\n                        {/* <UserList isRoom={true} room={this.state.name}/> */}\n                        <UserListR room={this.state.name} />\n\n                        <LocationService />\n                    </div>\n                    <div className='fr w-40 pa1 mt3'>\n                        <Map />\n                    </div>\n                </div>\n            </div>\n        )\n\n    }\n}\n\n\nexport default Room","import React, { Component } from 'react'\nimport { Redirect } from 'react-router-dom'\nimport { Link } from \"react-router-dom\";\n\n\n\n\nclass Auth extends Component {\n    state = {\n        name: '',\n        password: '',\n        hash:''\n    }\n    handleChange = (e) => {\n        this.setState({\n            [e.target.id]: e.target.value\n        })\n    }\n    handleSubmit = (e) => {\n        e.preventDefault();\n        this.setState({\n            hash:this.state.name\n        })\n        console.log(this.state)\n    }\n\n    goBack(e) {\n        e.preventDefault();\n        this.props.history.goBack();\n    }\n\n    render() {\n        console.log(this.state.name)\n        if (this.state.hash) return <Redirect to={`/rooms/${this.state.hash}`} />\n\n        return (\n            <div className='fl w-100 pa2'>\n                <button className='pa2 b--black input-reset ba bg-transparent mt4s mt3 pl4'>\n                    <Link to={`/`} style={{ textDecoration: 'none', color: 'inherit' }}>\n                    Back To Main Page\n                    </Link>\n                </button>\n                <label className='tc f1 fl w-100'>Join A Room</label>\n                <div className=' fl w-60 pl7 mt4 ma7'>\n                    <form className=\"center mt5\">\n                        <div className=\"input-field mt3  center\">\n                            <label htmlFor=\"password\" className=\"db fw4 lh-copy f6\">Room Name<br /></label>\n                            <input\n                                className='pa2 input-reset ba bg-transparent w-100 measure'\n                                type=\"name\"\n                                id=\"name\"\n                                onChange={this.handleChange}\n                            />\n                        </div>\n                        <div className=\"mt3 center\">\n                            <button onClick={this.handleSubmit} type='submit' defaultValue='Create' className=\"pa2 b--black input-reset ba bg-transparent\">\n                                <Link to={`/rooms/${this.state.name}`} style={{ textDecoration: 'none', color: 'inherit' }} >Join</Link>\n                            </button>\n                        </div>\n                    </form>\n                </div>\n            </div>\n        )\n\n    }\n}\n\n\nexport default Auth","import React from 'react'\nimport { Route } from 'react-router-dom';\nimport io from 'socket.io-client'\nimport './index.scss'\n\nimport Main from './components/Main'\nimport CreateRoom from './components/CreateRoom'\nimport Room from './components/Room'\nimport JoinNewRoom from './components/JoinNewRoom'\n\nconst HOST = window.location.origin\nwindow.socket = io(HOST)\n\n// window.socket = io('http://localhost:5000/')\n\n\n\n// window.socket = io(`http://130.233.101.204:5000`)\n// window.socket = io(`http://192.168.1.4:5000`)\n\n//\n\n\nconst App = () => {\n  return (\n    <div className='app'>\n      <Route exact path=\"/\" component={Main}/>\n      <Route path='/createroom' component={CreateRoom}/>\n      <Route path='/rooms/:id' component={Room}/>\n      <Route path='/auth' component={JoinNewRoom}/>\n    </div>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { BrowserRouter } from \"react-router-dom\";\n\nimport './index.scss'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\nimport \"tachyons/css/tachyons.min.css\";\n\n\n\nReactDOM.render(\n    <BrowserRouter >\n        <App />\n      </BrowserRouter>\n, document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n","module.exports = {\n  activeMembers: 'activeMembers',\n  initQuery: 'initQuery',\n  placeChange: 'placeChange',\n}\n"],"sourceRoot":""}